"11:28:40 a.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

"11:29:32 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:29:35 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:31:07 a.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

!Remiseria methodsFor!
todosLosChoferes
"Retorna la lista de los choferes"
^lista_chofer.! !
!Remiseria categoriesFor: #todosLosChoferes!public! !

!Remiseria methodsFor!
todosLosClientes
"Retorna la lista de clientes"
^lista_clientes.! !
!Remiseria categoriesFor: #todosLosClientes!public! !

"11:33:51 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:33:54 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:33:57 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"04:13:40 p.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

Object subclass: #Persona
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Persona guid: (GUID fromString: '{C6AE47F5-B04D-4702-99B2-8586C4DCD592}')!
Persona comment: ''!
!Persona categoriesForClass!Kernel-Objects! !
Object subclass: #Persona
	instanceVariableNames: 'nombre'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion telefono'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion telefono dni'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni

nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"Inicializa una instancia de persona, sus clases hijos llamaran este metodo"
nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
verNombre
"Retorna el nombre de la persona"
^nombre.! !
!Persona categoriesFor: #verNombre!public! !

!Persona methodsFor!
verDireccion
"Retorna la direccion de una persona"
^direccion.! !
!Persona categoriesFor: #verDireccion!public! !

!Persona methodsFor!
verTelefono
"Retorna el telefono de una persona"
^telefono.! !
!Persona categoriesFor: #verTelefono!public! !

!Persona methodsFor!
verDni
"Retorna el dni de una persona"
^dni.! !
!Persona categoriesFor: #verDni!public! !

!Persona class methodsFor!
crearPersonaNom: unNom ! !
!Persona class categoriesFor: #crearPersonaNom:!public! !

!Persona class methodsFor!
crearPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni

^(self new ) iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni.! !
!Persona class categoriesFor: #crearPersonaNom:dir:tel:dni:!public! !

Persona class removeSelector: #crearPersonaNom: ifAbsent: []!

!Persona class methodsFor!
crearPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"En duda probar si funciona asi o si no hace falta este metodo"
^(self new ) iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni.! !
!Persona class categoriesFor: #crearPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
modiNombre: unNom
"Modifica el nombre de una persona"
nombre:=unNom.! !
!Persona categoriesFor: #modiNombre:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiTelefono: unTel
"Mofica el telefono"
telefono:=unTel.! !
!Persona categoriesFor: #modiTelefono:!public! !

Persona class removeSelector: #crearPersonaNom:dir:tel:dni: ifAbsent: []!

Persona subclass: #Chofer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Chofer guid: (GUID fromString: '{76281269-866C-4DA9-98DC-C0BD467FD79B}')!
Chofer comment: ''!
!Chofer categoriesForClass!Kernel-Objects! !
!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro

^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

Persona subclass: #Chofer
	instanceVariableNames: 'codigo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible registro'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.
! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

c inspect.!

|c |

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.!

!Chofer methodsFor!
verDisponibilidad
"Retorna true si el chofer esta disponible"
^disponible.! !
!Chofer categoriesFor: #verDisponibilidad!public! !

|c |

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.
(c verDisponibilidad) inspect.!

!Chofer methodsFor!
verCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #verCodigo!public! !

!Chofer methodsFor!
verRegistro
"Retorna el registro del chofer"
^registro.! !
!Chofer categoriesFor: #verRegistro!public! !

Persona subclass: #Cliente
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Cliente guid: (GUID fromString: '{71C341BF-6F5E-4E57-865F-0B2A4740A73A}')!
Cliente comment: ''!
!Cliente categoriesForClass!Kernel-Objects! !
Persona subclass: #Cliente
	instanceVariableNames: 'codigo_cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_cliente:=unCodigo.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Crea una instancia de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Retorna una instancia de chofer inicializada"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.
! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Inicializa una instancia de cliente"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_cliente:=unCodigo.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
verCodigoCliente
"Retorna el codigo del cliente"
^codigo_cliente.! !
!Cliente categoriesFor: #verCodigoCliente!public! !

Persona subclass: #Recepcionista
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Recepcionista guid: (GUID fromString: '{CA762A3F-4C55-4415-8E4B-0C7C7C63AFC6}')!
Recepcionista comment: ''!
!Recepcionista categoriesForClass!Kernel-Objects! !
Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral codigo_recep'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Recepcionista class methodsFor!
crearRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Retorna una instancia de recepcionista inicializada"
^(self new) iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario.! !
!Recepcionista class categoriesFor: #crearRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Inicializa una instancia de recepcionista"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_recep:=unCodigo.
horario_laboral:=unaHorario.! !
!Recepcionista categoriesFor: #iniRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
verCodigo_recep
"Retorna el codigo de la recepcionista"
^codigo_recep.! !
!Recepcionista categoriesFor: #verCodigo_recep!public! !

!Recepcionista methodsFor!
verHorario
"Retorna el horario laboral de la recepcionista"
^horario_laboral.! !
!Recepcionista categoriesFor: #verHorario!public! !

!Recepcionista methodsFor!
modiHorario: unHorario
"Modofica el horario laboral"
horario_laboral:=unHorario.! !
!Recepcionista categoriesFor: #modiHorario:!public! !

"05:52:51 p.m., miércoles, 28 de octubre de 2020: Image saved"!

|c cl r|

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.
(c verDisponibilidad) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.
r inspect.!

|remi c cl r|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.
r inspect.

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect. !

!Remiseria methodsFor!
agregarChofer: unChofer
"Agrega un chofer a la remiseria"
lista_chofer add: unChofer.! !
!Remiseria categoriesFor: #agregarChofer:!public! !

!Remiseria methodsFor!
eliminarChofer: unChofer
"Elimina un chofer de la remiseria"
lista_chofer remove: unChofer.! !
!Remiseria categoriesFor: #eliminarChofer:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
agregarCliente: unCliente
"Agrega un cliente a la remiseria"
lista_clientes add: unCliente.! !
!Remiseria categoriesFor: #agregarCliente:!public! !

!Remiseria methodsFor!
eliminarCliente: unCliente
"Elimina un cliente de la remiseria"
lista_clientes remove: unCliente.! !
!Remiseria categoriesFor: #eliminarCliente:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Chofer methodsFor!
modiDisponibilidad
"Modifica el estado del chofer"
disponible:= disponible not.! !
!Chofer categoriesFor: #modiDisponibilidad!public! !

!Chofer methodsFor!
modiRegistro: unreg
"Modifica el registro del chofer"
registro:= unreg. ! !
!Chofer categoriesFor: #modiRegistro:!public! !

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible registro auto'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Chofer methodsFor!
verAuto
"Retorna auto"
^auto.! !
!Chofer categoriesFor: #verAuto!public! !

!Chofer methodsFor!
agregarAuto: unAuto
"Agrega o modifica un auto al chofer"
auto:=unAuto.! !
!Chofer categoriesFor: #agregarAuto:!public! !

Object subclass: #Auto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Auto guid: (GUID fromString: '{18D22FD2-058F-493F-8753-033253D5886D}')!
Auto comment: ''!
!Auto categoriesForClass!Kernel-Objects! !
Object subclass: #Auto
	instanceVariableNames: 'patente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color modelo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color modelo codigo_auto'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Auto class methodsFor!
crearAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo
"Retorna una instancia de auto inicializada"
^(self new) iniAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo.! !
!Auto class categoriesFor: #crearAutoPatente:col:mod:cod:!public! !

!Auto methodsFor!
iniAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo
"Inicializa una instancia de auto"
patente:=unaPatente.
color:=unColor.
modelo:=unModelo.
codigo_auto:=unCodigo.! !
!Auto categoriesFor: #iniAutoPatente:col:mod:cod:!public! !

!Auto methodsFor!
verPatente
"Retorna la patente del auto"
^patente.! !
!Auto categoriesFor: #verPatente!public! !

!Auto methodsFor!
verColor
"Retorna el color del auto"
^color.! !
!Auto categoriesFor: #verColor!public! !

!Auto methodsFor!
verModelo
"Retorna el modelo del auto"
^modelo.! !
!Auto categoriesFor: #verModelo!public! !

!Auto methodsFor!
verCodigo_auto
"Retorna el codigo del auto"
^codigo_auto.! !
!Auto categoriesFor: #verCodigo_auto!public! !

!Auto methodsFor!
modiColor: unColor
"Modifica el color del auto en caso de que sea pintado"
color:=unColor.! !
!Auto categoriesFor: #modiColor:!public! !

"07:06:09 p.m., miércoles, 28 de octubre de 2020: Image saved"!

Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral codigo_recep agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Recepcionista methodsFor!
agregarAgenda: unaAgenda
"Agrega una agenda a recepcionista"
agenda:=unaAgenda.! !
!Recepcionista categoriesFor: #agregarAgenda:!public! !

!Recepcionista methodsFor!
verAgenda
"Retorna agenda"
^agenda.! !
!Recepcionista categoriesFor: #verAgenda!public! !

Object subclass: #Agenda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Agenda guid: (GUID fromString: '{67691D7D-7512-464E-848C-93743BF88BFF}')!
Agenda comment: ''!
!Agenda categoriesForClass!Kernel-Objects! !
Object subclass: #Agenda
	instanceVariableNames: 'viaje'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'viaje reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'viaje reserva codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda class methodsFor!
crearAgendaCod: unCodigo
"Retorna una instancia de agenda inicializada"
^(self new) iniAgendaCod: unCodigo.! !
!Agenda class categoriesFor: #crearAgendaCod:!public! !

!Agenda methodsFor!
iniAgendaCod: unCodigo
"Inicializa una instancia de agenda"
codigo_agenda:=unCodigo.! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

Object subclass: #Agenda
	instanceVariableNames: 'lista_viajes reserva codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'lista_viajes codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes lista_reservas'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
"Inicializa una instancia de agenda"
codigo_agenda:=unCodigo.
lista_viajes:= OrderedCollection new.
lista_reservas:= OrderedCollection new.! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
verCodigo_agenda
"Retorna el codigo de la agenda"
^codigo_agenda.! !
!Agenda categoriesFor: #verCodigo_agenda!public! !

!Agenda methodsFor!
agregarViaje: unViaje
"Agrega un viaje a la agenda"
lista_viajes add: unViaje.! !
!Agenda categoriesFor: #agregarViaje:!public! !

!Agenda methodsFor!
eliminarViaje: unViaje
"Elimina un viaje de la agenda"
lista_viajes remove: unViaje.! !
!Agenda categoriesFor: #eliminarViaje:!public! !

!Agenda methodsFor!
existeViaje: unViaje
"Retorna true si el viaje esta en la agenda, false en caso contrario"
^ lista_viajes includes: unViaje.! !
!Agenda categoriesFor: #existeViaje:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
^lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
^lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Agenda methodsFor!
agregarReserva: unaReserva
"Agrega una reserva a la agenda"
lista_reservas add: unaReserva.! !
!Agenda categoriesFor: #agregarReserva:!public! !

!Agenda methodsFor!
eliminarReserva: unaReserva
"Elimina una reserva de la agenda"
lista_reservas remove: unaReserva.! !
!Agenda categoriesFor: #eliminarReserva:!public! !

!Agenda methodsFor!
existeReserva: unaReserva
"Retorna true si la reserva esta en la agenda, false en caso contrario"
^lista_reservas includes: unaReserva.! !
!Agenda categoriesFor: #existeReserva:!public! !

Object subclass: #Viaje
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Viaje guid: (GUID fromString: '{E03F36D0-4DD3-4739-95B5-18145BE9533D}')!
Viaje comment: ''!
!Viaje categoriesForClass!Kernel-Objects! !
Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe cliente chofer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte.! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:!public! !

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:!public! !

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer .! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:cli:cho:!public! !

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.
cliente:=unCliente.
chofer:=unChofer. ! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:cli:cho:!public! !

Viaje removeSelector: #iniViajeCod:fecha:hora:destino:import: ifAbsent: []!

!Viaje methodsFor!
verCodigo_viaje
"Retorna el codigo del viaje"
^codigo_viaje.! !
!Viaje categoriesFor: #verCodigo_viaje!public! !

!Viaje methodsFor!
verFecha
"Retorna la fecha del viaje"
^fecha. ! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje methodsFor!
verHora
"Retorna la hora del viaje"
^hora. ! !
!Viaje categoriesFor: #verHora!public! !

!Viaje methodsFor!
verDestino
"Retorna el destino del viaje"
^destino. ! !
!Viaje categoriesFor: #verDestino!public! !

!Viaje methodsFor!
verImporte
"Retorna el importe del viaje"
^importe. ! !
!Viaje categoriesFor: #verImporte!public! !

!Viaje methodsFor!
verCliente
"Retorna el cliente"
^cliente. ! !
!Viaje categoriesFor: #verCliente!public! !

!Viaje methodsFor!
verChofer
"Retorna el chofer del viaje"
^chofer. ! !
!Viaje categoriesFor: #verChofer!public! !

!Viaje methodsFor!
verCliente
"Retorna el cliente del viaje"
^cliente. ! !
!Viaje categoriesFor: #verCliente!public! !

!Viaje methodsFor!
modiFecha: unaFecha
"Modifica la fecha del viaje"
fecha:=unaFecha. ! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
modiFecha: unaFecha
"Modifica la fecha del viaje"
fecha:= unaFecha. ! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
modiHora: unaHora
"Mofifica la hora del viaje"
hora:= unaHora.! !
!Viaje categoriesFor: #modiHora:!public! !

!Viaje methodsFor!
modiDestino: unDestino
"Modifica el destino del viaje"
destino:= unDestino.! !
!Viaje categoriesFor: #modiDestino:!public! !

!Viaje methodsFor!
modiDestino: unDestino
"Modifica el destino del viaje"
destino:= unDestino.! !
!Viaje categoriesFor: #modiDestino:!public! !

!Viaje methodsFor!
modiImporte: unImporte
"Modifica el importe de un viaje"
importe:=unImporte. ! !
!Viaje categoriesFor: #modiImporte:!public! !

!Viaje methodsFor!
modiCliente: unCliente
"Modifica el cliente del viaje"
cliente:= unCliente. ! !
!Viaje categoriesFor: #modiCliente:!public! !

!Viaje methodsFor!
modiChofer: unChofer
"Modifica un chofer del viaje"
chofer:=unChofer. ! !
!Viaje categoriesFor: #modiChofer:!public! !

!Viaje methodsFor!
modiChofer: unChofer
"Modifica un chofer del viaje"
chofer:=unChofer. ! !
!Viaje categoriesFor: #modiChofer:!public! !

Object subclass: #Reserva
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Reserva guid: (GUID fromString: '{AA4F9A87-EEA6-4B9E-9A1F-86B906119546}')!
Reserva comment: ''!
!Reserva categoriesForClass!Kernel-Objects! !
Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino fecha'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino fecha cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Reserva class methodsFor!
crearReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente
"Retorna una instancia de reserva inicializada"
^ (self new) iniReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente.! !
!Reserva class categoriesFor: #crearReservaCod:hora:fecha:dest:cliente:!public! !

!Reserva methodsFor!
iniReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente
"Inicializa una instancia de reserva"
codigo_reserva:=unCodigo.
hora_reserva:=unaHora.
destino:=unDestino.
fecha:=unaFecha.
cliente:=unCliente. ! !
!Reserva categoriesFor: #iniReservaCod:hora:fecha:dest:cliente:!public! !

!Reserva methodsFor!
verCodigoReserva
"Retorna el codigo de la reserva"
^codigo_reserva.! !
!Reserva categoriesFor: #verCodigoReserva!public! !

!Reserva methodsFor!
verHoraReserva
"Retorna la hora de la reserva"
^hora_reserva. ! !
!Reserva categoriesFor: #verHoraReserva!public! !

!Reserva methodsFor!
verDestino
"Retorna  el destino de la reserva"
^destino. ! !
!Reserva categoriesFor: #verDestino!public! !

!Reserva methodsFor!
verFecha
"Retorna la fecha de la reserva"
^fecha. ! !
!Reserva categoriesFor: #verFecha!public! !

!Reserva methodsFor!
verCliente
"Retorna el cliente de la reserva"
^cliente. ! !
!Reserva categoriesFor: #verCliente!public! !

!Reserva methodsFor!
modiHoraReserva: unaHora
"Modifica la hora de la reserva"
hora_reserva:=unaHora. ! !
!Reserva categoriesFor: #modiHoraReserva:!public! !

!Reserva methodsFor!
modiHoraReserva: unaHora
"Modifica la hora de la reserva"
hora_reserva:= unaHora. ! !
!Reserva categoriesFor: #modiHoraReserva:!public! !

!Reserva methodsFor!
modiDestino: unDestino
"Modifica el destino de una reserva"
destino:=unDestino. ! !
!Reserva categoriesFor: #modiDestino:!public! !

!Reserva methodsFor!
modiFecha: unaFecha
"Modifica la fecha de una reserva"
fecha:= unaFecha. ! !
!Reserva categoriesFor: #modiFecha:!public! !

!Reserva methodsFor!
modiCliente: unCliente
"Modifica el cliente que hace la reserva"
cliente:= unCliente. ! !
!Reserva categoriesFor: #modiCliente:!public! !

"09:12:00 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:20 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:40 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:58 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:13:01 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"02:01:56 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 
r inspect.!

|remi c cl r a|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 
r inspect.
remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect.!

"02:09:32 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:09:44 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:09:47 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:48:14 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!

"03:09:37 p.m., sábado, 31 de octubre de 2020: Image saved"!

|remi c cl r a n d t dn co re ch col1|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.



cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. 

col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre inspect ].!

"04:22:35 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:23:58 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:24:05 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:24:09 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:39:35 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.



cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect.!

col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre inspect ].!

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat' cod: 05 .
c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c inspect.!

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 
remi inspect. !

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
cl1:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
cl2:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl.
remi agregarCliente: cl1.
remi agregarCliente: cl2. 

remi inspect.!

|remi c cl r a n d t dn co re ch col1 aut|

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
cl1:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
cl2:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl.
remi agregarCliente: cl1.
remi agregarCliente: cl2. 

remi inspect.

"1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. "

1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.
			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. !

|remi aut c cl r a |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 
remi inspect.!

|remi aut c cl r a |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 


remi inspect.!

"07:19:12 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:15 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:24 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:36 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:41 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:44 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:48 p.m., sábado, 31 de octubre de 2020: Image saved"!

"12:37:15 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

Transcript nextPutAll: 'Pagina de prueba'.!

Transcript nextPutAll: 'Pagina de prueba'.
Transcript cr.
'EDAD: ' printOn: Transcript.
Transcript space .
56 printOn: Transcript.
!

Transcript

show: 'Hola mundo' .!

Transcript

show: 'Hola mundo' .!

Transcript

show: 'Hola mundo' ;
clear.!

Transcript

show: 'Hola mundo' ;
cr;
showAllColorSymbol.!

Transcript

show: 'Hola mundo' ;
cr;
show: 'Nico'.!

Transcript clear.!

| op|

Transcript clear; 
show: 'Remiseria';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

Transcript clear; 
show: 'Remiseria®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

Transcript clear; 
show: 'Remiseria ®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr!

Transcript clear; 
show: 'Remiseria ^®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

| op|

Transcript clear; 
show: 'Remiseria ®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.

op:=(Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op~=4] whileTrue: [
(op=1) ifTrue: [ Transcript show: 'eligio cargar datos'; cr. ].
(op=2) ifTrue: [ Transcript show: 'eligio solicitar un viaje'; cr. ].
(op=3) ifTrue: [ Transcript  show: 'eligio imprimir un viaje';cr. ].
					]. !

"01:12:02 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=4] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1' ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ].
	]. !

"01:21:26 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=4] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1' ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1'; cr ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ; cr].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi|

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ; cr].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre printString ] ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

remi verNombre printString. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

Transcript  show: remi verNombre printString. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.!

"01:51:18 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:33 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:43 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:46 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:49 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"04:25:30 p.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

"05:41:37 p.m., domingo, 01 de noviembre de 2020: Image saved"!

!Persona methodsFor!
modiTelefono: unTel
"Modifica el telefono"
telefono:=unTel.! !
!Persona categoriesFor: #modiTelefono:!public! !

"06:28:54 p.m., domingo, 01 de noviembre de 2020: Image saved"!

!Recepcionista methodsFor!
modiHorario: unHorario
"Modifica el horario laboral"
horario_laboral:=unHorario.! !
!Recepcionista categoriesFor: #modiHorario:!public! !

"06:35:55 p.m., domingo, 01 de noviembre de 2020: Image saved"!

"06:36:01 p.m., domingo, 01 de noviembre de 2020: Image saved"!

"06:36:04 p.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:52:24 p.m., martes, 03 de noviembre de 2020: Dolphin Smalltalk Professional started"!

"03:32:19 p.m., martes, 03 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi col1 cl col2 |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ col2:= remi todosLosClientes.
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ col2:= remi todosLosClientes.
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | each verNombre ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString  ; cr) ].  ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ) ].  ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ].].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre, '---' printString ) ].  ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString, '---';cr ].].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre, '---' printString ); cr ].  ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript  cr .].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ].  ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript  cr .].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

"03:54:49 p.m., martes, 03 de noviembre de 2020: Image saved"!

!Remiseria methodsFor!
choferDisponible
|cho | 
"Metodo para buscar un chofer disponible para asignar a un viaje"
^(cho:=(self todosLosChoferes) detect: [:each |  each verDisponibilidad = true ]).! !
!Remiseria categoriesFor: #choferDisponible!public! !

"04:00:49 p.m., martes, 03 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

"04:36:18 p.m., martes, 03 de noviembre de 2020: Image saved"!

"04:36:31 p.m., martes, 03 de noviembre de 2020: Image saved"!

MessageBox warning: 'El numero ingresado es incorrecto'!

sigue:= MessageBox confirm: '¿Desea seguir ingresando datos?'!

"04:39:43 p.m., martes, 03 de noviembre de 2020: Image saved"!

"04:39:50 p.m., martes, 03 de noviembre de 2020: Image saved"!

"04:56:32 p.m., martes, 03 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente =unCod ) ifTrue: [^(lista_clientes  at: i)] ] ]. ! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente =unCod ) ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. ! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter promt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
codCliente:= (Prompter promt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 

v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 

v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter promt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter promt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 


v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 

v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter promt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 


v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 

v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 


v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 

v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 


v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 

v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
(cl=nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
(cl=nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
(cl=nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cl:= remi buscarClienteCod: codCliente. 
(cl==nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod asNumber)ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. ! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
"1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod asNumber)ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. "

|cli | 
"Metodo para buscar un chofer disponible para asignar a un viaje"
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente=unCod ]).! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
"1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod asNumber)ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. "

|cli | 
"Metodo para buscar un chofer disponible para asignar a un viaje"
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente=unCod ]).! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
"1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod asNumber)ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. "

! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
"1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod asNumber)ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	]  ]. "

|cli | 
"Metodo para buscar un chofer disponible para asignar a un viaje"
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ).! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch .   ].


v inspect. !


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
v inspect.   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ]	]  ]. 

"|cli | 
Metodo para buscar un chofer disponible para asignar a un viaje
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). "! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cl:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cl cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cli:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cli:= remi buscarClienteCod: codCliente. 
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

"10:04:01 p.m., martes, 03 de noviembre de 2020: Image saved"!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ' .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl== nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil) ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifTrue:  [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].
!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil) ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr. ]
ifTrue:  [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil) ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ]
ifTrue:  [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ].
!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil)  ifTrue:  [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil)  ifTrue:  [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	].  ]. 

"|cli | 
Metodo para buscar un chofer disponible para asignar a un viaje
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). "! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ].	].  ]. 

"|cli | 
Metodo para buscar un chofer disponible para asignar a un viaje
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). "! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cli:= remi buscarClienteCod: codCliente. 
cli inspect.
(cl~= nil)  ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cli cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

"10:54:30 p.m., martes, 03 de noviembre de 2020: Image saved"!

"10:54:48 p.m., martes, 03 de noviembre de 2020: Image saved"!

"10:54:50 p.m., martes, 03 de noviembre de 2020: Image saved"!

"04:29:32 p.m., miércoles, 04 de noviembre de 2020: Dolphin Smalltalk Professional started"!

[:x | x+2] value: 5.!

[:x | x+2] value: 5.!

[Transcript show] value.!

|b|
b := [:x | x+2].
b value: 12.!

1 < 2
  ifTrue: [100]
  ifFalse: [42].!

3 > 10 
	ifTrue: [Transcript show: 'maybe there''s a bug ....']
	ifFalse: [Transcript show: 'Everything''s cool: 3 is less than 10'].!

3 > 10 
	ifTrue: [Transcript show: 'maybe there''s a bug ....']
	ifFalse: [Transcript show: 'Everything''s cool: 3 is less than 10']!

3 > 10 
	ifTrue: [Transcript show: 'maybe there''s a bug ....']
	ifFalse: [Transcript show: 'Everything''s cool: 3 is less than 10'].!

3 > 10 
	ifTrue: [Transcript show: 'maybe there''s a bug ....']
	ifFalse: [Transcript show: 'Everything''s cool: 3 is less than 10'].!

#(11 38 3 -2 10) do: [:each |
     Transcript show: each displayString; cr].!

#(11 38 3 -2 10) collect: [:each | each negated].!

#(11 38 3 -2 10) collect: [:each | each negated].!

#(11 38 3 -2 10) collect: [:each | each odd].!

#(11 38 3 -2 10) select: [:each | each > 10].!

#(11 38 3 -2 10) reject: [:each | each > 10].!

#(11 38 3 -2 10) 
     do: [:each | Transcript show: each displayString]
     separatedBy: [Transcript show: '.'].!

|aCollection|
aCollection := OrderedCollection new
	add: 'Some text';
	add: 3;
	yourself.
Transcript show: aCollection printString; cr.!

(True methodDictionary at: #and:) getSource.

"Or all the methods it sends:"

(True methodDictionary at: #and:) messages.

"Here's all the methods I implement:"

ProfStef class methodDictionary.

"Let's create a new method to go to the next lesson:"

ProfStef class compile: 'goToNextLesson ProfStef next.'

"Wow!! I can't wait to use my new method!!"

ProfStef goToNextLesson.!

TimeStamp current inspect.!

ProfStef browse.!

ProfStef browse.!

ProfStef superclass browse.!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
cl~= nil
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
cl~= nil
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
[cl~= nil
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].]. !

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
[(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].]. !

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
[(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
[(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].] inspect.  !

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: (01) asNumber .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= Prompter prompt: ' Ingrese el codigo del cliente para el viaje: '.
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~= nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].
!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl==nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].
!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl==nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl=nil) 
 ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifFalse: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl=nil) 
 ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl=nil) 
 ifFalse: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'   ]
ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ]!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl==nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ifFalse: [Transcript show: ' se registro bien el viaje'  ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl==nil) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ifFalse: [Transcript show: ' se registro bien el viaje'  ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~=Cliente ) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ifFalse: [Transcript show: ' se registro bien el viaje'  ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~=Cliente ) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ifFalse: [Transcript show: ' se registro bien el viaje'  ].!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 1 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cl~=Cliente ) ifTrue: [Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ifFalse: [Transcript show: ' se registro bien el viaje'  ].!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] .!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] .!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] .!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] .!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] .!

MessageBox warning: 'El numero ingresado es incorrecto'.!

sigue:= MessageBox confirm: '¿Desea seguir ingresando datos?'.!

sigue:= MessageBox confirm: '¿Desea seguir ingresando datos?'.!

Transcript space .!

Transcript space .!

Transcript space .!

Transcript space .!

56 printOn: Transcript!

56 printOn: Transcript.!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr ] ] .!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
"cliente inspect."
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr ] ] .!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
"cliente inspect."
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			cl inspect.
			remi agregarCliente: cl ] ] .!

| op n d t dn co re ch remi col1 cl col2 aut c |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=7] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c cliente|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=7] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ]	] ]. 

"|cli | 
Metodo para buscar un chofer disponible para asignar a un viaje
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). "! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ]	] ]. 

"|cli | 
Metodo para buscar un chofer disponible para asignar a un viaje
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). "! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
v inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			cl inspect.
			remi agregarCliente: cl ] ] .!

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.
cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
v inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			cl inspect.
			remi agregarCliente: cl ] ] .!

!Remiseria methodsFor!
buscarClienteCod: unCod
"Busca el cliente con el codigo asociado"
"1 to: lista_clientes size do: [:i| (self existeCliente: (lista_clientes at: i)) ifTrue: [((lista_clientes  at: i) verCodigoCliente  = unCod )ifTrue: [^(lista_clientes  at: i)]
																							ifFalse: [ ^nil ]	] ]. "

|cli | 
"Metodo para buscar un chofer disponible para asignar a un viaje"
^(cli:=(self todosLosClientes ) detect: [:each |  each verCodigoCliente = unCod ] ifNone: [^nil] ). ! !
!Remiseria categoriesFor: #buscarClienteCod:!public! !

|r a remi aut c cl codCliente cliente fech hs des imp ch v |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01 .
remi agregarCliente: cl.
cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
cliente inspect.
"(cliente ~= nil ) ifTrue: [Transcript  show: 'esta en el sistema' ] ifFalse: [ Transcript  show: 'no esta en el sistema' ] ."

"(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr ] ."

(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
v inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			cl inspect.
			remi agregarCliente: cl ] ] .!

"06:57:54 p.m., miércoles, 04 de noviembre de 2020: Image saved"!

"06:58:13 p.m., miércoles, 04 de noviembre de 2020: Image saved"!

"06:58:28 p.m., miércoles, 04 de noviembre de 2020: Image saved"!

"06:58:45 p.m., miércoles, 04 de noviembre de 2020: Image saved"!

"06:58:48 p.m., miércoles, 04 de noviembre de 2020: Image saved"!

"01:14:07 p.m., martes, 10 de noviembre de 2020: Dolphin Smalltalk Professional started"!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda viajes lista_reservas'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	viajes := OrderedCollection new.
	lista_reservas := OrderedCollection new! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
eliminarViaje: unViaje
	"Elimina un viaje de la agenda"

	viajes remove: unViaje! !
!Agenda categoriesFor: #eliminarViaje:!public! !

!Agenda methodsFor!
existeViaje: unViaje
	"Retorna true si el viaje esta en la agenda, false en caso contrario"

	^viajes includes: unViaje! !
!Agenda categoriesFor: #existeViaje:!public! !

!Agenda methodsFor!
agregarViaje: unViaje
	"Agrega un viaje a la agenda"

	viajes add: unViaje! !
!Agenda categoriesFor: #agregarViaje:!public! !

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	viajes := Dictionary new. 
	lista_reservas := OrderedCollection new! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
agregarViaje: unViaje 
	"Agrega un viaje a la agenda"

	viajes add: unViaje .! !
!Agenda categoriesFor: #agregarViaje:!public! !

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes lista_reservas'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	lista_viajes := Dictionary new.
	lista_reservas := OrderedCollection new! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
eliminarViaje: unViaje
	"Elimina un viaje de la agenda"

	lista_viajes remove: unViaje! !
!Agenda categoriesFor: #eliminarViaje:!public! !

!Agenda methodsFor!
existeViaje: unViaje
	"Retorna true si el viaje esta en la agenda, false en caso contrario"

	^lista_viajes includes: unViaje! !
!Agenda categoriesFor: #existeViaje:!public! !

!Agenda methodsFor!
agregarViaje: unViaje
	"Agrega un viaje a la agenda"

	lista_viajes add: unViaje! !
!Agenda categoriesFor: #agregarViaje:!public! !

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	lista_viajes := OrderedCollection new. 
	lista_reservas := OrderedCollection new! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes lista_reservas viajes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	lista_viajes := OrderedCollection new. 
	lista_reservas := OrderedCollection new.
	viajes:= Dictionary new. ! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes lista_reservas viajesXdia'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
	"Inicializa una instancia de agenda"

	codigo_agenda := unCodigo.
	lista_viajes := OrderedCollection new.
	lista_reservas := OrderedCollection new.
	viajesXdia := Dictionary new! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
agregarViajeXdia: unViaje
"                  "
viajesXdia at: unViaje verFecha put: unViaje verImporte . ! !
!Agenda categoriesFor: #agregarViajeXdia:!public! !

!Agenda methodsFor!
agregarViajeXdia: unViaje
" Guarda en un diccionario la fecha de un viaje como clave, y el importe como valor "
viajesXdia at: unViaje verFecha put: unViaje verImporte . ! !
!Agenda categoriesFor: #agregarViajeXdia:!public! !

| op n d t dn co re ch remi col1 cl col2 aut c cliente|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=7] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViajeXdia: v.
a inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c cliente|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=7] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod fecha: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViajeXdia: v.
a inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje dia hora destino importe cliente chofer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Viaje methodsFor!
modiFecha: unaFecha
	"Modifica la fecha del viaje"

	dia := unaFecha! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
iniViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli: unCliente cho: unChofer
	"Inicializa una instancia de viaje"

	codigo_viaje := unCodigo.
	dia := unaFecha.
	hora := unaHora.
	destino := unDestino.
	importe := unImporte.
	cliente := unCliente.
	chofer := unChofer! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:cli:cho:!public! !

!Viaje methodsFor!
verFecha
	"Retorna la fecha del viaje"

	^dia! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje methodsFor!
dia
	"Retorna la fecha del viaje"

	^dia! !
!Viaje categoriesFor: #dia!public! !

!Reserva methodsFor!
dia
	"Retorna la fecha de la reserva"

	^fecha! !
!Reserva categoriesFor: #dia!public! !

!Agenda methodsFor!
agregarViajeXdia: unViaje
	" Guarda en un diccionario la fecha de un viaje como clave, y el importe como valor "

	viajesXdia at: unViaje dia put: unViaje verImporte! !
!Agenda categoriesFor: #agregarViajeXdia:!public! !

Viaje removeSelector: #verFecha ifAbsent: []!

Reserva removeSelector: #verFecha ifAbsent: []!

!Viaje methodsFor!
dia: unaFecha
	"Modifica la fecha del viaje"

	dia := unaFecha! !
!Viaje categoriesFor: #dia:!public! !

!Reserva methodsFor!
dia: unaFecha
	"Modifica la fecha de una reserva"

	fecha := unaFecha! !
!Reserva categoriesFor: #dia:!public! !

Viaje removeSelector: #modiFecha: ifAbsent: []!

Reserva removeSelector: #modiFecha: ifAbsent: []!

!Viaje methodsFor!
iniViajeCod: unCodigo dia: unaFecha hora: unaHora destino: unDestino import: unImporte cli: unCliente cho: unChofer
	"Inicializa una instancia de viaje"

	codigo_viaje := unCodigo.
	dia := unaFecha.
	hora := unaHora.
	destino := unDestino.
	importe := unImporte.
	cliente := unCliente.
	chofer := unChofer! !
!Viaje categoriesFor: #iniViajeCod:dia:hora:destino:import:cli:cho:!public! !

Viaje removeSelector: #iniViajeCod:fecha:hora:destino:import:cli:cho: ifAbsent: []!

!Viaje methodsFor!
verDia
	"Retorna la fecha del viaje"

	^dia! !
!Viaje categoriesFor: #verDia!public! !

!Viaje methodsFor!
modiDia: unaFecha
	"Modifica la fecha del viaje"

	dia := unaFecha! !
!Viaje categoriesFor: #modiDia:!public! !

Viaje removeSelector: #dia ifAbsent: []!

Viaje removeSelector: #dia: ifAbsent: []!

!Viaje class methodsFor!
crearViajeCod: unCodigo dia: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo dia: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer .! !
!Viaje class categoriesFor: #crearViajeCod:dia:hora:destino:import:cli:cho:!public! !

Viaje class removeSelector: #crearViajeCod:fecha:hora:destino:import: ifAbsent: []!

Viaje class removeSelector: #crearViajeCod:fecha:hora:destino:import:cli:cho: ifAbsent: []!

!Agenda methodsFor!
agregarViajeXdia: unViaje
	" Guarda en un diccionario la fecha de un viaje como clave, y el importe como valor "

	viajesXdia at: unViaje verDia  put: unViaje verImporte .! !
!Agenda categoriesFor: #agregarViajeXdia:!public! !

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=7] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViajeXdia: v.
a inspect. 
Transcript show: ' se registro bien el viaje'  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

!Agenda methodsFor!
verViajesXdia
^ viajesXdia.! !
!Agenda categoriesFor: #verViajesXdia!public! !

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=8] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViajeXdia: v.
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a inspect ] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

"Filed out from Dolphin Smalltalk 7"!

nil subclass: #Object
	instanceVariableNames: ''
	classVariableNames: '_AssertionFailureSignal _DependentsRegister _EventsRegister _PropertyRegister'
	poolDictionaries: '_InstanceBehaviorMasks'
	classInstanceVariableNames: ''!

!Agenda methodsFor!
cantidadViajesXdia
"    "
|cantViajesXdia noRepetidos diccionario |

cantViajesXdia:= OrderedCollection new.
lista_viajes do: [:via | cantViajesXdia add: via verDia ] . "Guardo los dias de cada viaje"
noRepetidos:= cantViajesXdia asSet. "Creo una coleccion que no repita los dias"
diccionario:= Dictionary new. "Creo un dicionario" 
"                "
noRepetidos do: [:dia | diccionario at: dia put: (cantViajesXdia occurrencesOf: dia) ]. 
diccionario inspect. ! !
!Agenda categoriesFor: #cantidadViajesXdia!public! !

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=8] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViajeXdia: v.
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=8] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
choferesEnViaje
"  "
|col |
col:= lista_chofer reject: [:ch | ch verDisponibilidad = true ]. ! !
!Remiseria categoriesFor: #choferesEnViaje!public! !

!Remiseria methodsFor!
choferesEnViaje
"  "
|col |
col:= lista_chofer reject: [:ch | ch verDisponibilidad = true ]. 
col inspect. ! !
!Remiseria categoriesFor: #choferesEnViaje!public! !

!Remiseria methodsFor!
choferesEnViaje
"  "
|col |
col:= lista_chofer reject: [:ch | ch verDisponibilidad = true ]. 
col inspect. ! !
!Remiseria categoriesFor: #choferesEnViaje!public! !

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=9] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ r choferesEnViaje ] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1 cl col2 aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=9] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ remi choferesEnViaje ] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
choferesEnViaje
"  "
|col |
col:= lista_chofer reject: [:ch | ch verDisponibilidad = true ]. 
^ col. ! !
!Remiseria categoriesFor: #choferesEnViaje!public! !

| op n d t dn co re ch remi col1 cl col2 col aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. Salir';
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=9] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ col:= remi choferesEnViaje collect: [:each | Transcript  show: ( each verNombre printString , (each verAuto) verModelo printString) ;cr ]. 
			] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Agenda methodsFor!
seleccionarViajesACapital

|col |
col:= lista_viajes select: [:via| via verDestino =  'capital' ]. 
^ col. ! !
!Agenda categoriesFor: #seleccionarViajesACapital!public! !

| op n d t dn co re ch remi col1 cl col2 col aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. viajes a capital' ;
cr;
show: ' 10. Salir' ;
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=10] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ col:= remi choferesEnViaje collect: [:each | Transcript  show: ( each verNombre printString , (each verAuto) verModelo printString) ;cr ]. 

(op=9) ifTrue: [ col:=a seleccionarViajesACapital collect: [:each | Transcript show: ( (each verCliente) verNombre printString , each verImporte printString) ; cr ] ]. 
			] . 
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1 cl col2 col aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. viajes a capital' ;
cr;
show: ' 10. Salir' ;
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=10] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ col:= remi choferesEnViaje collect: [:each | Transcript  show: ( each verNombre printString , (each verAuto) verModelo printString) ;cr ]. 
	] . 
(op=9) ifTrue: [ col:=a seleccionarViajesACapital collect: [:each | Transcript show: ( (each verCliente) verNombre printString , each verImporte printString) ; cr ] ]. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"06:01:36 p.m., martes, 10 de noviembre de 2020: Image saved"!

"06:03:22 p.m., martes, 10 de noviembre de 2020: Image saved"!

!Agenda methodsFor!
cantidadViajesXdia

|cantViajesXdia noRepetidos diccionario |

cantViajesXdia:= OrderedCollection new.
lista_viajes do: [:via | cantViajesXdia add: via verDia ] . "Guardo los dias de cada viaje"
noRepetidos:= cantViajesXdia asSet. "Creo una coleccion que no repita los dias"
diccionario:= Dictionary new. "Creo un dicionario" 
"                "
noRepetidos do: [:dia | diccionario at: dia put: (cantViajesXdia occurrencesOf: dia) ]. 
diccionario inspect. ! !
!Agenda categoriesFor: #cantidadViajesXdia!public! !

!Agenda methodsFor!
cantidadViajesXdia

|cantViajesXdia noRepetidos diccionario |

cantViajesXdia:= OrderedCollection new.
lista_viajes do: [:via | cantViajesXdia add: via verDia ] . "Guardo los dias de cada viaje"
noRepetidos:= cantViajesXdia asSet. "Creo una coleccion que no repita los dias"
diccionario:= Dictionary new. "Creo un dicionario" 
noRepetidos do: [:dia | diccionario at: dia put: (cantViajesXdia occurrencesOf: dia) ]. 
diccionario inspect. ! !
!Agenda categoriesFor: #cantidadViajesXdia!public! !

!Agenda methodsFor!
cantidadViajesXdia

|cantViajesXdia noRepetidos diccionario |

cantViajesXdia:= OrderedCollection new.
lista_viajes do: [:via | cantViajesXdia add: via verDia ] . "Guardo los dias de cada viaje"
noRepetidos:= cantViajesXdia asSet. "Creo una coleccion que no repita los dias"
diccionario:= Dictionary new. "Creo un dicionario" 
noRepetidos do: [:dia | diccionario at: dia put: (cantViajesXdia occurrencesOf: dia) ]. 
diccionario inspect. ! !
!Agenda categoriesFor: #cantidadViajesXdia!public! !

| op n d t dn co re ch remi col1 cl col2 col aut c cliente |

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c modiDisponibilidad. 
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 

Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de choferes';
cr;
show: ' 2. Carga de clientes';
cr;
show: ' 3. Imprimir choferes'; 
cr;
show: ' 4. Imprimir clientes';
cr;
show: ' 5. Imprimir un chofer disponible';
cr;
show: ' 6. Cargar un viaje';
cr;
show: ' 7. ver diccionario';
cr;
show: ' 8. verchoferes ocupados en viaje' ;
cr;
show: ' 9. viajes a capital' ;
cr;
show: ' 10. Salir' ;
cr. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=10] whileTrue: [ 
(op=1) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ].
(op=2) ifTrue: [ n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].

(op=3) ifTrue: [ Transcript show: ' Choferes cargados en el sistema: ';cr.
 col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. Transcript show: '----------------------------------------------------------------------------------';cr.].

(op=4) ifTrue: [ "col2:= remi todosLosClientes."
"1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. " 
Transcript show: ' Clientes  cargados en el sistema: ';cr.
col2:= remi todosLosClientes  collect: [:each | Transcript show: (each verNombre printString , each verCodigoCliente printString ); cr ]. 
Transcript show: '----------------------------------------------------------------------------------';cr. ].

(op=5) ifTrue: [ Transcript  show: 'Primer chofer disponoble encontrado: '; cr;
 show: remi choferDisponible verNombre printString ; cr.]. 

(op=6) ifTrue: [ codCliente:= (Prompter prompt: ' Ingrese el codigo del cliente para el viaje: ') asNumber .
cliente:= remi buscarClienteCod: codCliente. 
(cliente ~= nil ) ifTrue: [ cod:=Prompter prompt: ' Ingrese el codigo del viaje'.
fech:= Prompter prompt: ' Ingrese la fecha del viaje: '.
hs:= Prompter prompt: ' Ingrese la hora del viaje: '.
des:= Prompter prompt: ' Ingrese el destino del viaje: '.
imp:= Prompter prompt: ' Ingrese el importe: '.
ch:= remi choferDisponible. 
v:= Viaje crearViajeCod: cod dia: fech hora: hs destino: des import: imp cli: cliente cho: ch . 
a agregarViaje: v. 
Transcript show: ' se registro bien el viaje' ;cr  ] ifFalse: [ Transcript show: ' El cliente no esta registrado en el sistema'; cr .
MessageBox warning: 'El cliente no esta registrado en el sistema'.
registrarlo:= MessageBox confirm: '¿Desea ingresar un nuevo cliente?'. (registrarlo=true) ifTrue: [Transcript show: 'Ingrese un nuevo cliente'; cr.
			n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			cl:=Cliente  crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ] ] .
] .
(op=7) ifTrue: [ a cantidadViajesXdia ] . 
(op=8) ifTrue: [ col:= remi choferesEnViaje collect: [:each | Transcript  show: ( each verNombre printString , (each verAuto) verModelo printString) ;cr ]. 
	] . 
(op=9) ifTrue: [ col:=a seleccionarViajesACapital collect: [:each | Transcript show: ( (each verCliente) verNombre printString , each verImporte printString) ; cr ] ]. 

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"08:15:56 p.m., martes, 10 de noviembre de 2020: Image saved"!

"08:16:02 p.m., martes, 10 de noviembre de 2020: Image saved"!

"08:16:07 p.m., martes, 10 de noviembre de 2020: Image saved"!

"08:16:10 p.m., martes, 10 de noviembre de 2020: Image saved"!

